var table = ee.FeatureCollection("users/milesvandenburg/LaughingBrook_Site"),
    Deciduous = /* color: #98ff00 */ee.FeatureCollection(
        [ee.Feature(
            ee.Geometry.Point([-72.4078137492669, 42.071135246051334]),
            {
              "Landcover": 0,
              "system:index": "0"
            }),
        ee.Feature(
            ee.Geometry.Point([-72.40778156275871, 42.07144584752443]),
            {
              "Landcover": 0,
              "system:index": "1"
            }),
        ee.Feature(
            ee.Geometry.Point([-72.4078137492669, 42.071740519311874]),
            {
              "Landcover": 0,
              "system:index": "2"
            }),
        ee.Feature(
            ee.Geometry.Point([-72.40880080218437, 42.072146686290104]),
            {
              "Landcover": 0,
              "system:index": "3"
            }),
        ee.Feature(
            ee.Geometry.Point([-72.41205163951042, 42.0717126450122]),
            {
              "Landcover": 0,
              "system:index": "4"
            }),
        ee.Feature(
            ee.Geometry.Point([-72.41202481742027, 42.07148965017399]),
            {
              "Landcover": 0,
              "system:index": "5"
            }),
        ee.Feature(
            ee.Geometry.Point([-72.38594491662036, 42.06607226891508]),
            {
              "Landcover": 0,
              "system:index": "6"
            }),
        ee.Feature(
            ee.Geometry.Point([-72.38628823937427, 42.064989047548565]),
            {
              "Landcover": 0,
              "system:index": "7"
            }),
        ee.Feature(
            ee.Geometry.Point([-72.43040521325122, 42.05001321156282]),
            {
              "Landcover": 0,
              "system:index": "8"
            }),
        ee.Feature(
            ee.Geometry.Point([-72.4158139962102, 42.06951296713091]),
            {
              "Landcover": 0,
              "system:index": "9"
            }),
        ee.Feature(
            ee.Geometry.Point([-72.42817361535083, 42.065626238826006]),
            {
              "Landcover": 0,
              "system:index": "10"
            }),
        ee.Feature(
            ee.Geometry.Point([-72.42225865341771, 42.046717200065494]),
            {
              "Landcover": 0,
              "system:index": "11"
            })]),
    Conciferous = /* color: #d63000 */ee.FeatureCollection(
        [ee.Feature(
            ee.Geometry.Point([-72.39991885376526, 42.073058893217066]),
            {
              "Landcover": 1,
              "system:index": "0"
            }),
        ee.Feature(
            ee.Geometry.Point([-72.39957553101135, 42.0726129122166]),
            {
              "Landcover": 1,
              "system:index": "1"
            }),
        ee.Feature(
            ee.Geometry.Point([-72.37288218689514, 42.06445727851603]),
            {
              "Landcover": 1,
              "system:index": "2"
            }),
        ee.Feature(
            ee.Geometry.Point([-72.36919146729065, 42.06311914480963]),
            {
              "Landcover": 1,
              "system:index": "3"
            }),
        ee.Feature(
            ee.Geometry.Point([-72.4012063140924, 42.08153193681643]),
            {
              "Landcover": 1,
              "system:index": "4"
            }),
        ee.Feature(
            ee.Geometry.Point([-72.40592700195862, 42.07401455623721]),
            {
              "Landcover": 1,
              "system:index": "5"
            }),
        ee.Feature(
            ee.Geometry.Point([-72.39159327698303, 42.075989547546705]),
            {
              "Landcover": 1,
              "system:index": "6"
            }),
        ee.Feature(
            ee.Geometry.Point([-72.384383499151, 42.07318631578446]),
            {
              "Landcover": 1,
              "system:index": "7"
            }),
        ee.Feature(
            ee.Geometry.Point([-72.3994038696344, 42.06490331681765]),
            {
              "Landcover": 1,
              "system:index": "8"
            }),
        ee.Feature(
            ee.Geometry.Point([-72.39910346222473, 42.062035873057816]),
            {
              "Landcover": 1,
              "system:index": "9"
            }),
        ee.Feature(
            ee.Geometry.Point([-72.39910346222473, 42.06174912155932]),
            {
              "Landcover": 1,
              "system:index": "10"
            }),
        ee.Feature(
            ee.Geometry.Point([-72.3991892929132, 42.061334922664145]),
            {
              "Landcover": 1,
              "system:index": "11"
            })]),
    Pasture = /* color: #0b4a8b */ee.FeatureCollection(
        [ee.Feature(
            ee.Geometry.Point([-72.41420413507797, 42.07744231086623]),
            {
              "Landcover": 2,
              "system:index": "0"
            }),
        ee.Feature(
            ee.Geometry.Point([-72.4136891509471, 42.076550407334885]),
            {
              "Landcover": 2,
              "system:index": "1"
            }),
        ee.Feature(
            ee.Geometry.Point([-72.42816235079147, 42.0677899743949]),
            {
              "Landcover": 2,
              "system:index": "2"
            }),
        ee.Feature(
            ee.Geometry.Point([-72.43500734819747, 42.06552799350849]),
            {
              "Landcover": 2,
              "system:index": "3"
            }),
        ee.Feature(
            ee.Geometry.Point([-72.43552233232833, 42.06626075670549]),
            {
              "Landcover": 2,
              "system:index": "4"
            }),
        ee.Feature(
            ee.Geometry.Point([-72.40983258710077, 42.06600546394304]),
            {
              "Landcover": 2,
              "system:index": "5"
            }),
        ee.Feature(
            ee.Geometry.Point([-72.40110359288667, 42.064768731060724]),
            {
              "Landcover": 2,
              "system:index": "6"
            }),
        ee.Feature(
            ee.Geometry.Point([-72.40098021127199, 42.06456960678404]),
            {
              "Landcover": 2,
              "system:index": "7"
            }),
        ee.Feature(
            ee.Geometry.Point([-72.39651115476624, 42.064645298050316]),
            {
              "Landcover": 2,
              "system:index": "8"
            }),
        ee.Feature(
            ee.Geometry.Point([-72.39644678174989, 42.06517098416207]),
            {
              "Landcover": 2,
              "system:index": "9"
            }),
        ee.Feature(
            ee.Geometry.Point([-72.39322770234418, 42.08654793426965]),
            {
              "Landcover": 2,
              "system:index": "10"
            }),
        ee.Feature(
            ee.Geometry.Point([-72.3932491600163, 42.08607019892846]),
            {
              "Landcover": 2,
              "system:index": "11"
            }),
        ee.Feature(
            ee.Geometry.Point([-72.40942824479413, 42.08556857294834]),
            {
              "Landcover": 2,
              "system:index": "12"
            })]),
    Urban_residential = /* color: #ffc82d */ee.FeatureCollection(
        [ee.Feature(
            ee.Geometry.Point([-72.40088949594553, 42.06363980180735]),
            {
              "Landcover": 3,
              "system:index": "0"
            }),
        ee.Feature(
            ee.Geometry.Point([-72.40430126581248, 42.06422125145982]),
            {
              "Landcover": 3,
              "system:index": "1"
            }),
        ee.Feature(
            ee.Geometry.Point([-72.39445219430979, 42.065885920333386]),
            {
              "Landcover": 3,
              "system:index": "2"
            }),
        ee.Feature(
            ee.Geometry.Point([-72.40005264673289, 42.065911805987966]),
            {
              "Landcover": 3,
              "system:index": "3"
            }),
        ee.Feature(
            ee.Geometry.Point([-72.40082780513819, 42.06560515986329]),
            {
              "Landcover": 3,
              "system:index": "4"
            }),
        ee.Feature(
            ee.Geometry.Point([-72.39876825596866, 42.06590571478223]),
            {
              "Landcover": 3,
              "system:index": "5"
            }),
        ee.Feature(
            ee.Geometry.Point([-72.41232906209984, 42.066775864923805]),
            {
              "Landcover": 3,
              "system:index": "6"
            }),
        ee.Feature(
            ee.Geometry.Point([-72.41288696157494, 42.06663449122125]),
            {
              "Landcover": 3,
              "system:index": "7"
            }),
        ee.Feature(
            ee.Geometry.Point([-72.3876025871167, 42.07355978272062]),
            {
              "Landcover": 3,
              "system:index": "8"
            }),
        ee.Feature(
            ee.Geometry.Point([-72.39740042404742, 42.06810059170047]),
            {
              "Landcover": 3,
              "system:index": "9"
            }),
        ee.Feature(
            ee.Geometry.Point([-72.40496425346942, 42.064436797319246]),
            {
              "Landcover": 3,
              "system:index": "10"
            }),
        ee.Feature(
            ee.Geometry.Point([-72.39554155890517, 42.0859459643795]),
            {
              "Landcover": 3,
              "system:index": "11"
            })]);



///BRING IN THE ROSS FOR THE CLOUDS
//ROSSAW IS READY


var laughingbrook = ee.FeatureCollection(table);
laughingbrook = laughingbrook.geometry();
var sitebuffer = laughingbrook.buffer(3000);

Map.setCenter(-72.404487, 42.064625, 13);
Map.addLayer(laughingbrook, {}, 'default display');
Map.addLayer(laughingbrook, {color: 'FF0000'}, 'colored');


var cloud_filtered = function(image) {
  var qa = image.select('pixel_qa');
  // If the cloud bit (5) is set and the cloud confidence (7) is high
  // or the cloud shadow bit is set (3), then it's a bad pixel.
  var cloud = qa.bitwiseAnd(1 << 5)
                  .and(qa.bitwiseAnd(1 << 7))
                  .or(qa.bitwiseAnd(1 << 3));
  // Remove edge pixels that don't occur in all bands
  var mask2 = image.mask().reduce(ee.Reducer.min());
  return image.updateMask(cloud.not()).updateMask(mask2);
};


//Brought in Landsat 7 imagery corrected for atmosphere 'SR'
var dataset = ee.ImageCollection('LANDSAT/LE07/C01/T1_SR').filterDate('2002-07-01', '2003-07-31').map(cloud_filtered);
var visParams = {
  bands: ['B3', 'B2', 'B1'],
  min: 0,
  max: 3000,
  gamma: 1.4,
};

//Adding in the filtered image into the map
var dataset_med = dataset.median();
Map.setCenter(-72.404487, 42.064625, 13);
Map.addLayer(dataset_med, visParams, 'TCC_Summer', false);



///Using CART Supervised Classification


//Define Merge for Classes
var newfc = Urban_residential.merge(Pasture).merge(Conciferous).merge(Deciduous);
print(newfc,'newfc')

// Use these bands for classification
var bands = ['B1', 'B2', 'B3', 'B4', 'B5', 'B6', 'B7'];

// This property of the table stores the land cover labels.
var label = 'Landcover';

// Overlay the points on the imagery to get training.
var training = dataset_med.select(bands).sampleRegions({
  collection: newfc,
  properties: [label],
  scale: 30
});

print(training)

// Train a CART classifier with default parameters.
var trained = ee.Classifier.cart().train(training, label, bands);

// Classify the image with the same bands used for training.
var classified = dataset_med.select(bands).classify(trained);

// //Define a palette for the Land Use classification.
var palette = [
  '00ff00', // Deciduous (0)  // Light Green
  '008000', // Conciferous (1) // Dark Green
  'red', // Pasture (2)  // Orange
  'grey', // Urban_residential (3)  // TEAL
];


// Display the inputs and the results.
Map.setCenter(-72.404487, 42.064625, 12);
Map.addLayer(classified,
             {min: 0, max: 2, palette: palette},
             'classification');
    


//Create band for binary landcovers -- Effectively the spectral class creation in TerrSet
var deciduous  = classified.eq(1).select([0], ['Deciduous']);
var deciduousArea  = deciduous.multiply(ee.Image.pixelArea());


print(deciduousArea)


// Add the classification result to the map and display the input image.
Map.setCenter(-72.404487, 42.064625, 13);
Map.addLayer(classified.clip(sitebuffer), {min: 0, max: 2, palette: palette}, 'Land Use Classification 2');
